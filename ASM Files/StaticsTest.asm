// Bootstrap Code
@256
D=A
@SP
M=D
@SP
D=M
@R13
M=D
@RET.0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@R13
D=M
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP

(Class1.set)
@SP
A=M
D=A
@SP
M=D

// PUSH ARGUMENT 0
@0
D=A
@ARG
A=M
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1

// POP STATIC 0
@SP
M=M-1
A=M
D=M
@Class1.vm.static.0
M=D

// PUSH ARGUMENT 1
@1
D=A
@ARG
A=M
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1

// POP STATIC 1
@SP
M=M-1
A=M
D=M
@Class1.vm.static.1
M=D

// PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1

// RETURN 
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
AM=M-1
D=M
M=0
@ARG
A=M
M=D
D=A+1
@SP
M=D
@R13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP

(Class1.get)
@SP
A=M
D=A
@SP
M=D

// PUSH STATIC 0
@Class1.vm.static.0
D=M
@SP
A=M
M=D
@SP
M=M+1

// PUSH STATIC 1
@Class1.vm.static.1
D=M
@SP
A=M
M=D
@SP
M=M+1

// SUB 
@SP
A=M
A=A-1
A=A-1
D=M
A=A+1
D=D-M
@SP
M=M-1
M=M-1
A=M
M=D
@SP
M=M+1

// RETURN 
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
AM=M-1
D=M
M=0
@ARG
A=M
M=D
D=A+1
@SP
M=D
@R13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP

(Class2.set)
@SP
A=M
D=A
@SP
M=D

// PUSH ARGUMENT 0
@0
D=A
@ARG
A=M
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1

// POP STATIC 0
@SP
M=M-1
A=M
D=M
@Class2.vm.static.0
M=D

// PUSH ARGUMENT 1
@1
D=A
@ARG
A=M
D=D+A
A=D
D=M
@SP
A=M
M=D
@SP
M=M+1

// POP STATIC 1
@SP
M=M-1
A=M
D=M
@Class2.vm.static.1
M=D

// PUSH CONSTANT 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1

// RETURN 
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
AM=M-1
D=M
M=0
@ARG
A=M
M=D
D=A+1
@SP
M=D
@R13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP

(Class2.get)
@SP
A=M
D=A
@SP
M=D

// PUSH STATIC 0
@Class2.vm.static.0
D=M
@SP
A=M
M=D
@SP
M=M+1

// PUSH STATIC 1
@Class2.vm.static.1
D=M
@SP
A=M
M=D
@SP
M=M+1

// SUB 
@SP
A=M
A=A-1
A=A-1
D=M
A=A+1
D=D-M
@SP
M=M-1
M=M-1
A=M
M=D
@SP
M=M+1

// RETURN 
@LCL
D=M
@R13
M=D
@5
D=D-A
A=D
D=M
@R14
M=D
@SP
AM=M-1
D=M
M=0
@ARG
A=M
M=D
D=A+1
@SP
M=D
@R13
A=M-1
D=M
@THAT
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@LCL
M=D
@R14
A=M
0;JMP

(Sys.init)
@SP
A=M
D=A
@SP
M=D

// PUSH CONSTANT 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1

// PUSH CONSTANT 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1

// CALL Class1.set
@Sys.vm-return-address-0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@2
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.set
0;JMP
(Sys.vm-return-address-0)

// POP TEMP 0
@SP
M=M-1
A=M
D=M
@5
M=D

// PUSH CONSTANT 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1

// PUSH CONSTANT 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1

// CALL Class2.set
@Sys.vm-return-address-1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@2
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.set
0;JMP
(Sys.vm-return-address-1)

// POP TEMP 0
@SP
M=M-1
A=M
D=M
@5
M=D

// CALL Class1.get
@Sys.vm-return-address-2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@0
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.get
0;JMP
(Sys.vm-return-address-2)

// CALL Class2.get
@Sys.vm-return-address-3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@0
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.get
0;JMP
(Sys.vm-return-address-3)

// LABEL 
(WHILE)

// GOTO WHILE
@WHILE
0;JMP

